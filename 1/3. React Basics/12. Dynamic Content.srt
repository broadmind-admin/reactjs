1
00:00:01,120 --> 00:00:10,330
Now let's start making our application resemble more closely to our actual final monster's Rolodex application

2
00:00:11,170 --> 00:00:15,950
so we know that we need to display a list of monsters.

3
00:00:16,180 --> 00:00:18,670
So instead of this string Halloween.

4
00:00:19,150 --> 00:00:27,550
I'm gonna make a new property called Monsters and I'm going to make it an array of objects that have

5
00:00:27,550 --> 00:00:28,350
a name on it.

6
00:00:29,230 --> 00:00:30,820
That's a string value.

7
00:00:30,910 --> 00:00:39,580
So our first monster will be Frankenstein our second monster will be Dracula and our third monster will

8
00:00:39,580 --> 00:00:42,280
be a zombie.

9
00:00:42,280 --> 00:00:53,020
So here I want to render let's say just a bunch of H ones with the actual names of these monsters.

10
00:00:53,030 --> 00:00:53,300
Right.

11
00:00:53,570 --> 00:00:57,760
So how I would go about doing that is I'm going to get rid of this because we don't need this anymore

12
00:00:58,910 --> 00:01:03,650
and we write our curly braces because we've got to render some javascript right.

13
00:01:03,740 --> 00:01:09,170
So now between these curly braces we can really render any javascript that we want.

14
00:01:09,230 --> 00:01:19,250
So I am going to call this dot state DOT monsters dot map because map returns us the return of whatever

15
00:01:19,250 --> 00:01:26,420
function we pass to it iterated over every element in this array.

16
00:01:26,450 --> 00:01:26,920
Right.

17
00:01:26,930 --> 00:01:35,010
So when I say iterate what I mean is that this function that I write here whatever this returns it's

18
00:01:35,010 --> 00:01:41,790
going to return in the place of every element in this array.

19
00:01:41,790 --> 00:01:51,030
So I'm gonna call a map on this monster's array right and map takes a function where the first argument

20
00:01:51,420 --> 00:01:57,840
is going to be the actual element that this function is going to get called on.

21
00:01:57,960 --> 00:01:58,200
Right.

22
00:01:58,230 --> 00:02:05,370
So it's going to call the function we pass in on it on Frankenstein and then on Dracula and then on

23
00:02:05,430 --> 00:02:06,100
the zombie.

24
00:02:06,130 --> 00:02:06,350
Right.

25
00:02:06,360 --> 00:02:08,820
It's going to call it on each object.

26
00:02:08,820 --> 00:02:13,850
Now what that function returns will be what gets return out of this map.

27
00:02:13,860 --> 00:02:15,740
Usually it's a new array.

28
00:02:15,750 --> 00:02:15,980
Right.

29
00:02:15,980 --> 00:02:22,420
When you call a map but react is smart enough to know that if we end up rendering out a bunch of h t

30
00:02:22,420 --> 00:02:27,720
AML blocks right in an array then it will just display those elements.

31
00:02:27,720 --> 00:02:29,870
So let's take a look.

32
00:02:29,880 --> 00:02:34,070
So our first element right our first argument is monster.

33
00:02:34,140 --> 00:02:37,590
So I'm going to return a new H1

34
00:02:41,460 --> 00:02:50,090
H1 where I'm going to again call the curly braces because this is a new return block right of HDL.

35
00:02:50,100 --> 00:02:50,970
Just like here.

36
00:02:50,970 --> 00:02:51,640
Right.

37
00:02:51,690 --> 00:02:53,090
It's gonna need new curly braces.

38
00:02:53,100 --> 00:02:55,420
And inside I'm gonna call monster.

39
00:02:55,570 --> 00:03:03,470
Name now what we should see is the name of each of our monsters right.

40
00:03:03,470 --> 00:03:05,090
We see that now.

41
00:03:05,480 --> 00:03:12,020
If we open up our console we'll see this warning that says each child in a list should have a unique

42
00:03:12,050 --> 00:03:13,040
key prop.

43
00:03:13,130 --> 00:03:19,040
So it's asking us to add a unique key to every child that gets a turn out of this map.

44
00:03:19,040 --> 00:03:19,690
Right.

45
00:03:19,700 --> 00:03:25,460
We've got to provide something that is unique completely to this list of elements.

46
00:03:25,460 --> 00:03:26,270
Right.

47
00:03:26,300 --> 00:03:33,530
So let's just make a value of I.D. and just call it something like this.

48
00:03:33,530 --> 00:03:33,950
Right.

49
00:03:33,970 --> 00:03:41,900
And any random unique string will work.

50
00:03:41,960 --> 00:03:55,630
The reason why we want a unique key is because react needs to know what element it needs to update.

51
00:03:55,630 --> 00:04:05,440
If one of these elements in our array has a value that changes right now let's say for example the user

52
00:04:05,440 --> 00:04:14,750
does something and it changes the name of our first monster from Frankenstein to Banshee for example.

53
00:04:14,750 --> 00:04:15,080
Right.

54
00:04:15,080 --> 00:04:19,880
Like let's say it does it in the code somewhere like the same way that we saw when we called set state

55
00:04:19,880 --> 00:04:20,620
earlier.

56
00:04:20,720 --> 00:04:30,470
Well react is smart enough to know that it only needs to update that first H1 right to change it to

57
00:04:30,500 --> 00:04:32,700
that new the new property.

58
00:04:32,780 --> 00:04:35,550
It doesn't need to re render all of these.

59
00:04:35,750 --> 00:04:43,060
And the key helps react understand it helps it know which element is the one that's been updated.

60
00:04:43,070 --> 00:04:45,440
Right which HDMI is attached to.

61
00:04:45,440 --> 00:04:47,450
Which element.

62
00:04:47,450 --> 00:04:51,140
So that it knows that it doesn't have to render everything.

63
00:04:51,290 --> 00:04:59,780
You can see how if this list was way bigger it would be really performance heavy to re render all everything.

64
00:04:59,780 --> 00:05:02,290
And that's what makes react so great.

65
00:05:02,300 --> 00:05:11,330
It's that it's smart it knows that if only one element in a list of a thousand elements changes it only

66
00:05:11,330 --> 00:05:18,050
needs to re render the part of the HDMI all that matters not the whole thing.

67
00:05:18,050 --> 00:05:24,590
So now that we have our list we actually want to make this look closer to the final.

68
00:05:24,980 --> 00:05:30,080
So right now these are just place holders for us to understand a little bit more of what it's like to

69
00:05:30,080 --> 00:05:31,750
write react.

70
00:05:31,910 --> 00:05:32,230
Right.

71
00:05:32,240 --> 00:05:35,420
We're iterating over an array and creating new elements.

72
00:05:35,540 --> 00:05:39,310
But let's actually dive a little deeper into it.
