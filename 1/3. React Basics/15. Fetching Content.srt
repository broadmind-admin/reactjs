1
00:00:00,420 --> 00:00:09,590
So we just learned how to take an array on our state and turn it into elements that we can then see

2
00:00:09,890 --> 00:00:14,100
right now in a real world scenario.

3
00:00:14,270 --> 00:00:20,710
We're probably not going to hard code the information that we're going to have right.

4
00:00:20,720 --> 00:00:27,230
Normally we would probably get it from a back end of some kind some kind of server some kind of database

5
00:00:28,200 --> 00:00:31,610
so I'm gonna show you how that would actually work.

6
00:00:31,650 --> 00:00:40,080
Now luckily I have a pretty good resource where it will give us a sample of 10 users right without us

7
00:00:40,080 --> 00:00:43,290
having to actually build a back end server of some kind.

8
00:00:43,800 --> 00:00:46,180
And it's at this link.

9
00:00:46,270 --> 00:00:53,790
Well it will give us back is this array of these objects right that have these properties like I.D.

10
00:00:53,820 --> 00:00:58,560
and name and email on it that we will use for our application.

11
00:00:58,560 --> 00:01:05,880
So what we need to figure out is how do we get this app component to make a call to the back end and

12
00:01:05,880 --> 00:01:13,770
then put that data into our states so that our render function knows to use it.

13
00:01:13,770 --> 00:01:15,780
Right nodes can have access to it.

14
00:01:15,780 --> 00:01:17,070
So how do we do that.

15
00:01:17,070 --> 00:01:17,560
You see.

16
00:01:17,640 --> 00:01:22,050
You remember how we got the render method by extending into component.

17
00:01:22,200 --> 00:01:28,360
We also get a bunch of other methods that are called lifecycle.

18
00:01:29,010 --> 00:01:30,930
What are lifecycle methods.

19
00:01:30,930 --> 00:01:38,130
Well if we look at this here we see a list of all these methods and it's an overwhelming list but what

20
00:01:38,130 --> 00:01:41,740
lifecycle methods are is there.

21
00:01:41,740 --> 00:01:52,380
Essentially methods that get called at different stages of when this component gets rendered.

22
00:01:52,380 --> 00:01:58,910
Now I know that's kind of jargon right now but I'm going to explain it to you throughout this course.

23
00:01:58,950 --> 00:02:03,560
But the main one I want us to focus on is component did mount.

24
00:02:03,630 --> 00:02:13,980
Now what component did mount does is it's kind of like the name right when this component mounts mounting

25
00:02:14,010 --> 00:02:18,960
is essentially one react puts our component on the page right.

26
00:02:18,960 --> 00:02:25,800
It renders it onto the DOM for the first time when it does that it red it calls whatever block of code

27
00:02:25,830 --> 00:02:27,150
we write inside of here.

28
00:02:27,240 --> 00:02:29,590
That's all it does.

29
00:02:29,610 --> 00:02:37,500
So what we want to do is we want to use javascript native fetch right to fetch from that you or I'll

30
00:02:38,100 --> 00:02:46,810
make an API request to that you are all and what this fetch returns us is a promise.

31
00:02:46,810 --> 00:02:47,130
Right.

32
00:02:47,920 --> 00:02:57,130
But that promise gives us a response of the actual body of our response but we don't know what that

33
00:02:57,130 --> 00:02:57,980
looks like at first.

34
00:02:57,980 --> 00:02:58,180
Right.

35
00:02:58,180 --> 00:03:03,110
So let's just log it out and see so we see this response object right.

36
00:03:03,110 --> 00:03:08,600
It's got the body and it's got these headers it's got all these properties that we don't really care

37
00:03:08,600 --> 00:03:09,950
about we don't really need them.

38
00:03:09,950 --> 00:03:10,580
Right.

39
00:03:10,610 --> 00:03:15,800
The main thing we want is we want the body but we want it in a format that our javascript understands

40
00:03:16,010 --> 00:03:18,220
in the format of Jason right.

41
00:03:18,260 --> 00:03:22,080
So let's from here return response Don.

42
00:03:22,160 --> 00:03:23,620
Jason which is a method.

43
00:03:23,840 --> 00:03:24,170
Right.

44
00:03:24,230 --> 00:03:34,100
On this response object that will give us back that response in the Jason format which we want and then

45
00:03:34,670 --> 00:03:41,750
that will get returned to us as a new promise which we will now have as the body which will be this

46
00:03:41,960 --> 00:03:48,620
array so when we get that array let's just log in again so that we know what we're getting

47
00:03:51,830 --> 00:03:58,050
we see our array right in the format in the objects that we know and we can use.

48
00:03:58,090 --> 00:04:05,210
So what we want to do is now we want to call set state as we did before.

49
00:04:05,710 --> 00:04:16,730
But now we want to set our monsters to this array of these users right and we want our initial state

50
00:04:16,760 --> 00:04:20,630
to be an empty array because we don't need to hardcoded anymore.

51
00:04:20,630 --> 00:04:20,890
Right.

52
00:04:20,900 --> 00:04:26,630
We're just going to we're going to wait for our component to mount and then we're going to fetch all

53
00:04:26,630 --> 00:04:34,830
of our users and then we're going to update our state's monster property with this new array of users.

54
00:04:34,850 --> 00:04:43,270
And now when we check our application we see that we have all of our monsters or users.

55
00:04:43,270 --> 00:04:43,540
Right.

56
00:04:43,580 --> 00:04:45,570
And we're displaying alternate.

57
00:04:45,690 --> 00:04:46,900
Now we see this error here.

58
00:04:46,920 --> 00:04:47,160
Right.

59
00:04:47,190 --> 00:04:48,150
It's just a warning.

60
00:04:48,150 --> 00:04:50,330
And it's telling us that we're not using the logo anymore.

61
00:04:50,340 --> 00:04:51,420
So let's just get rid of it.

62
00:04:51,990 --> 00:04:55,950
That's the great thing about create racked up as well is it comes with lynching.

63
00:04:55,950 --> 00:05:00,570
We can be aware of writing and making our code clean.

64
00:05:00,630 --> 00:05:08,130
So now just to go over this again we're using this component did mount lifecycle method that we have

65
00:05:08,280 --> 00:05:18,520
access to because of our class component and we are fetching from this you are all we are taking a response

66
00:05:18,550 --> 00:05:25,570
and converting it into the Jason format that are JavaScript can understand and use and then we're going

67
00:05:25,570 --> 00:05:34,420
to take the users that we got back from it and set our monsters to that array of user and that's how

68
00:05:34,420 --> 00:05:45,940
we end up with this list of in the next section we're going to now convert this to look a little bit

69
00:05:45,940 --> 00:05:47,110
closer to this.
