1
00:00:01,710 --> 00:00:03,830
Now react came out in 2013.

2
00:00:03,840 --> 00:00:07,890
But what do we have before then before we act.

3
00:00:07,890 --> 00:00:15,040
Well the front fronting landscape was very different initially back in the 90s and early 2000s.

4
00:00:15,090 --> 00:00:23,160
We just had basic HMO CSX and JavaScript H2 e-mail displayed the text on our web pages see assess the

5
00:00:23,160 --> 00:00:28,430
styles and JavaScript allows us to have some interactivity in a Web site.

6
00:00:28,500 --> 00:00:35,200
And initially it just started with simple forms where we sent from the back end to when we go to a you

7
00:00:35,210 --> 00:00:37,410
URL all these files.

8
00:00:37,410 --> 00:00:47,130
And when a user let's say submits a form we simply send that back to the server to store that information.

9
00:00:47,130 --> 00:00:51,300
Now if a user clicked on let's say a link in the page.

10
00:00:51,420 --> 00:00:58,740
Well once again we simply request the new Asia mail file and the new page from the server and that gets

11
00:00:58,740 --> 00:01:03,960
sent to the front end and that's how Web sites worked for many years.

12
00:01:04,840 --> 00:01:06,670
But there is a problem here.

13
00:01:06,670 --> 00:01:14,890
You see all these Web sites where run on different browsers and all these browsers were worked on by

14
00:01:14,890 --> 00:01:16,690
different group of developers.

15
00:01:16,690 --> 00:01:21,820
So each one of these browsers implemented while their browser differently.

16
00:01:21,820 --> 00:01:28,600
So what happened was as we wanted to use more and more JavaScript in our web pages we had to account

17
00:01:28,600 --> 00:01:32,830
for all these browsers that sometimes work differently from each other.

18
00:01:32,830 --> 00:01:37,990
And we had to accommodate javascript to work with these different browsers.

19
00:01:37,990 --> 00:01:46,210
Now eventually we had J query come out which allowed developers to easily interact with the DOM or the

20
00:01:46,210 --> 00:01:49,990
document object model across all these browsers.

21
00:01:50,050 --> 00:01:57,550
You see back in the day if we went to let's say hacker news over here clicked on views developer and

22
00:01:57,550 --> 00:02:02,020
then developer tools and we went to elements here.

23
00:02:02,020 --> 00:02:06,190
This is the DOM the dom that well is our page.

24
00:02:06,280 --> 00:02:13,600
It displays exactly how our page should look like and it's a tree like structure and JavaScript.

25
00:02:13,610 --> 00:02:16,250
All it does is modify this Dom.

26
00:02:16,400 --> 00:02:25,310
You can remove elements you can update the elements and although there's now more similarities and compatibility

27
00:02:25,460 --> 00:02:28,950
across different browsers back in the day we didn't have that.

28
00:02:29,090 --> 00:02:39,110
So J query may developers happy because it had a unified easy API that kind of looked like this instead

29
00:02:39,110 --> 00:02:45,060
of a developer trying to think about how to work with the DOM in each of the different browsers.

30
00:02:45,150 --> 00:02:51,350
The J query said hey we'll take care of that complexity for you just this is the syntax we'll use that

31
00:02:51,350 --> 00:03:00,380
works across all browsers and you can manipulate the front end or the DOM however you want so that was

32
00:03:00,380 --> 00:03:08,480
great but with this power developers started building bigger and bigger applications instead of just

33
00:03:08,720 --> 00:03:09,900
something small.

34
00:03:09,950 --> 00:03:15,680
We started getting these massive massive applications like Facebook where you got to log in.

35
00:03:15,680 --> 00:03:22,370
Look at the News Feed message friends and as websites turned into these full applications that people

36
00:03:22,370 --> 00:03:28,170
can interact with besides just requesting more and more pages like a blog.

37
00:03:28,190 --> 00:03:35,150
Well libraries like backbone J.S. came out because well our JavaScript files started getting bigger

38
00:03:35,240 --> 00:03:42,740
and bigger and bigger libraries like backbone J.S. allowed us to organize these JavaScript files and

39
00:03:42,740 --> 00:03:50,720
because it became easier and easier to work with the DOM we had the birth of a single page application.

40
00:03:50,720 --> 00:03:58,310
You see traditionally we just had a small files for each page and every time we moved to a different

41
00:03:58,310 --> 00:04:04,550
page we would request from the server while the asian mail file the CSF file and the javascript file

42
00:04:04,790 --> 00:04:12,150
which usually contain Jacqui for each time we clicked on a link but with more advancement like we had

43
00:04:12,150 --> 00:04:18,330
with J query backbone and something called Ajax we now had a different system.

44
00:04:18,420 --> 00:04:24,310
What generally happened now is we focused less on HMO and a lot more in JavaScript.

45
00:04:24,420 --> 00:04:33,600
You only load the application code once instead of us making new requests to the server where we returned

46
00:04:33,630 --> 00:04:35,550
a new document instead.

47
00:04:35,550 --> 00:04:41,760
Now our applications acted more like a desktop application where we stay on the same page the entire

48
00:04:41,760 --> 00:04:51,210
time and the javascript file simply changes or updates the HMO file or the DOM to display new things.

49
00:04:51,210 --> 00:04:57,180
So you were able to sign into an application and interact with that application without ever speaking

50
00:04:57,180 --> 00:05:05,740
to the server anymore and this way of writing applications or single page applications became really

51
00:05:05,800 --> 00:05:06,890
really popular.

52
00:05:06,890 --> 00:05:15,810
And in 2010 angular J.S. which was created by Google really became the standard way of building applications

53
00:05:15,820 --> 00:05:24,860
this way now unlike J angular allowed developers to build these large applications by forming these

54
00:05:24,860 --> 00:05:33,380
containers that well wrapped your project and because it was created by Google it had a lot of power

55
00:05:33,500 --> 00:05:36,500
because people said well this is the way that we should build things.

56
00:05:36,500 --> 00:05:37,960
Everything's organized.

57
00:05:37,970 --> 00:05:47,240
We have these large JavaScript files but we can organize them this way you had code now that now had

58
00:05:47,300 --> 00:05:55,670
better containers where you had things like controllers views and models and this idea of a Model View

59
00:05:55,670 --> 00:06:02,540
Controller where each part of the application or each JavaScript file was divided into different things

60
00:06:02,540 --> 00:06:09,750
that it did this idea of organizing our large code so they're easier to work with as teams get larger

61
00:06:09,750 --> 00:06:15,820
and larger really made angular J.S. popular but there was a problem.

62
00:06:16,110 --> 00:06:21,010
You see things started getting more and more complex because of this.

63
00:06:21,180 --> 00:06:24,890
As things get bigger and bigger more things have to happen.

64
00:06:24,900 --> 00:06:32,250
Users are clicking on this button which changes this area which in turn changes this area which now

65
00:06:32,250 --> 00:06:35,090
has to display this information.

66
00:06:35,250 --> 00:06:41,490
We have more and more complexity now and although frameworks like angular J.S. came out people started

67
00:06:41,490 --> 00:06:47,430
to notice it's getting harder and harder to find bugs in the code and understand how each part of the

68
00:06:47,430 --> 00:06:49,590
app was affecting the other.

69
00:06:49,590 --> 00:06:56,160
Meanwhile Facebook developers were finding it hard as well on their end to maintain their app especially

70
00:06:56,160 --> 00:06:57,510
their Facebook ads.

71
00:06:58,170 --> 00:07:04,600
You see the Facebook ads app got more and more features more and more people were added to the team.

72
00:07:04,650 --> 00:07:11,730
Now the growing number of lines of code the growing number of people working on the app their app became

73
00:07:11,790 --> 00:07:17,970
really really difficult to handle and each update would cost more and more issues where you had all

74
00:07:17,970 --> 00:07:22,190
these arrows relating to each other pointing to each other.

75
00:07:22,290 --> 00:07:27,840
And after a while the engineers of Facebook just couldn't keep up with the way that they had created

76
00:07:27,840 --> 00:07:28,730
this app.

77
00:07:28,890 --> 00:07:35,160
They needed to upgrade their code base and this isn't just special in the front end world.

78
00:07:35,160 --> 00:07:36,710
This is all of our programming.

79
00:07:37,050 --> 00:07:39,360
It's why we need good architecture.

80
00:07:39,360 --> 00:07:47,280
We need to think about how we organize our code how we manipulate data and how that data flows through

81
00:07:47,460 --> 00:07:48,700
our programs.

82
00:07:48,750 --> 00:07:54,210
So Facebook came up with a solution and that solution worked really really well for them.

83
00:07:54,210 --> 00:08:04,020
That in 2013 they released react to the developer community at J.S. conf 2013 and their solution was

84
00:08:04,260 --> 00:08:06,080
really really good.

85
00:08:06,270 --> 00:08:12,880
And it took off because react devolved a whole new way to build front end applications now.

86
00:08:13,050 --> 00:08:20,370
It also happened that in 2014 angular J.S. realized that the way that they've architected their framework

87
00:08:20,430 --> 00:08:27,270
just didn't allow good applications to be built anymore so they decided in 2014 that they're going to

88
00:08:27,270 --> 00:08:28,970
rewrite the entire library.

89
00:08:29,070 --> 00:08:35,580
Call it angular but because they wanted to do an entire rewrite a lot of people during that time moved

90
00:08:35,580 --> 00:08:37,050
to react.

91
00:08:37,050 --> 00:08:43,410
So combined with the fact that angular J.S. was getting a complete new rewrite Facebook was backing

92
00:08:43,770 --> 00:08:51,640
react and the great principles that react introduced made it what it is today.

93
00:08:51,730 --> 00:08:58,060
That is it became the most popular font and tooled with the most job demand across the world and being

94
00:08:58,060 --> 00:09:07,780
used by very large companies like Airbnb be uber Netflix Twitter Reddit Pinterest Wicks PayPal stripe

95
00:09:07,870 --> 00:09:09,690
Tumblr Walmart.

96
00:09:10,030 --> 00:09:13,590
However what made react so great.

97
00:09:13,630 --> 00:09:20,560
What were these principles that made it jump from something that Facebook used to something that developers

98
00:09:20,680 --> 00:09:22,240
all over the world use.

99
00:09:22,270 --> 00:09:23,680
Let's find out in the next video.
